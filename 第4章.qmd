---
title: "第4章 非遵守者"
format:
  html: 
    theme: journal
    highlight-style: pygments
    page-layout: full
number-sections: true
toc: true
toc-depth: 3
toc-location: left
code-fold: show
data: "最終更新: `r Sys.Date()`"
---

```{r setup, include=FALSE}
rm(list = ls())
knitr::opts_chunk$set(cache = FALSE, echo = TRUE, fig.align = "center", warning = FALSE)
library(magrittr)
library(ggplot2)
library(kableExtra)
library(CausalInferenceTextbook)
color_main <- scales::viridis_pal(option = "C")(1)
```

# 片側遵守者

参照：[因果推論の計量経済学（川口、澤田）：第4章　非遵守者](https://github.com/keisemi/EconometriciansGuide_CausalInference/blob/main/main/noncompliance_onesided.html)

## シミュレーションデータの生成

### 定数とパラメータの設定

```{r}
set.seed(1)
N <- 1000           #個体数
N_1 <- 500　　　　　#処置群のサイズ
G <- c("nc", "co")　#遵守タイプ
bias <- 0.5　　　　 #除外制約が満たされない場合のバイアス
tau_population <- c(1, 2) #母集団における平均処置効果
```

### データの生成

```{r}
outcome_potential <- 
  1:length(G) %>% 
  purrr::map(
    function(n) {
      df <- tibble::tibble(
        g = G[n],
        y_0 = rnorm(N / length(G),
                    mean = 0,
                    sd = 1),
        y_1 = rnorm(N / length(G),
                    mean = tau_population[n],
                    sd = 1),
        y_z = rnorm(N / length(G),
                    mean = bias,
                    sd = 1)
      )
      return(df)
    }
  ) %>% 
  dplyr::bind_rows()

tau <- 
  outcome_potential %>% 
  dplyr::group_by(g) %>% 
  dplyr::summarise(
    tau = mean(y_1 - y_0)
  ) %>% 
  dplyr::ungroup()

outcome_potential %>% 
  head() %>% 
  kableExtra::kbl() %>% 
  kableExtra::kable_styling()
```

```{r}
outcome_potential %>% 
  modelsummary::datasummary_skim()
```

```{r}
tau %>% 
  kableExtra::kbl() %>% 
  kableExtra::kable_styling()
```

観察されるデータの生成。（処置割当ベクトルzと遵守タイプから、処置受取ベクトルdを生成する。）

除外制約ありのデータの生成

```{r}
data_realized_excluded <- 
  generate_data_noncompliance_oneside(
    outcome_potential = outcome_potential,
    N_1 = N_1,
    seed = 1,
    exclusion = 1
  )

data_realized_excluded %>% 
  head() %>% 
  kableExtra::kbl() %>% 
  kableExtra::kable_styling()
```

```{r}
data_realized_excluded %>% 
  modelsummary::datasummary_skim()
```

除外制約なしのデータの生成

```{r}
data_realized_included <- 
  generate_data_noncompliance_oneside(
    outcome_potential = outcome_potential,
    N_1 = N_1,
    seed = 1,
    exclusion = 0  #除外制約なし
  )

data_realized_included %>% 
  head() %>% 
  kableExtra::kbl() %>% 
  kableExtra::kable_styling()
```

```{r}
data_realized_included %>% 
  modelsummary::datasummary_skim()
```

## 分析と推計

### $\tilde{\tau}_D$の手動計算

処置が割り当てられた時の処置の受取確率（処置受取の処置割当効果$\tilde{\tau}_D$の推定値）

```{r}
tau_tilde_d_excluded <- 
  data_realized_excluded %>% 
  dplyr::filter(z == 1) %>% 
  dplyr::summarise(
    d = sum(d) / length(d)
  ) %>% 
  dplyr::pull(d)

tau_tilde_d_excluded
```

```{r}
tau_tilde_d_included <- 
  data_realized_included %>% 
  dplyr::filter(z == 1) %>% 
  dplyr::summarise(
    d = sum(d) / length(d)
  ) %>% 
  dplyr::pull(d)

tau_tilde_d_included
```

### 回帰分析による$\tilde{\tau}_D$の推定

```{r}
data_realized_excluded %>% 
  lm(data = .,
     formula = d ~ z) %>% 
  modelsummary::modelsummary(fmt = 6)
```

```{r}
data_realized_included %>% 
  lm(data = .,
     formula = d ~ z) %>% 
  modelsummary::modelsummary(fmt = 6)
```

### $\tilde{\tau}_Y$の手動計算

結果の処置割当効果$\tilde{\tau}_Y$の推定値

```{r}
tau_tilde_y_excluded <- 
  data_realized_excluded %>% 
  dplyr::group_by(z) %>% 
  dplyr::summarise(
    y = mean(y)
  ) %>% 
  dplyr::ungroup() %>% 
  dplyr::summarise(
    y = sum(y * z) -
      sum(y * (1 - z))
  ) %>% 
  dplyr::pull(y)

tau_tilde_y_excluded
```

```{r}
tau_tilde_y_included <-  
  data_realized_included %>% 
  dplyr::group_by(z) %>% 
  dplyr::summarise(
    y = mean(y)
  ) %>% 
  dplyr::ungroup() %>% 
  dplyr::summarise(
    y = sum(y * z) -
      sum(y * (1 - z))
  ) %>% 
  dplyr::pull(y)

tau_tilde_y_included
```

### 回帰分析による$\tilde{\tau}_Y$の推定

```{r}
data_realized_excluded %>% 
  lm(data = .,
     formula = y ~ z) %>% 
  modelsummary::modelsummary(fmt = 6)
```

```{r}
data_realized_included %>% 
  lm(data = .,
     formula = y ~ z) %>% 
  modelsummary::modelsummary(fmt = 6)
```

### $\tilde{\tau}_{Y,co} = \tau_{late}$の手動計算

結果の処置割当効果を処置受取の処置割当効果で割ることによって局所平均処置効果の推定値（＝遵守者の平均処置効果）を算出。

```{r}
tau_late_excluded <- 
  tau_tilde_y_excluded /
  tau_tilde_d_excluded

tau_late_excluded
```

母集団におけるパラメータ(= 2)を適切に推定している。

```{r}
tau_late_included <- 
  tau_tilde_y_included /
  tau_tilde_d_included

tau_late_included
```

除外制約が満たされないことで、母集団におけるパラメータ(= 2)をバイアス分過大評価している。

### 二段階最小二乗法による$\tilde{\tau}_{Y,co} = \tau_{late}$の推定

```{r}
data_realized_excluded %>% 
  estimatr::iv_robust(
    data = .,
    formula = y ~ d | z
  ) %>% 
  modelsummary::modelsummary(fmt = 6)
```

```{r}
data_realized_included %>% 
  estimatr::iv_robust(
    data = .,
    formula = y ~ d | z
  ) %>% 
  modelsummary::modelsummary(fmt = 6)
```

# 両側非遵守者

参照: [因果推論の計量経済学（川口、澤田）：第4章　非遵守者](https://github.com/keisemi/EconometriciansGuide_CausalInference/blob/main/main/noncompliance_twosided.html)

## シミュレーションデータの生成

### 定数とパラメータの設定

```{r}
set.seed(1)
N <- 1000                        #個体数
N_1 <- 500                       #処置群のサイズ
G <- c("nt", "co", "at", "df")　 #遵守タイプ
tau_population <- c(1, 2, 3, 4)  #母集団における平均処置効果
```

### データの生成

標本の潜在結果と、無作為抽出された標本における平均処置効果tauを算出。

```{r}
outcome_potential <- 
  1:length(G) %>% 
  purrr::map(
    function(i) {
      df <- 
        tibble::tibble(
          g = G[i],
          y_0 = rnorm(n = N / length(G),
                      mean = 0,
                      sd = 1),
          y_1 = rnorm(n = N / length(G),
                      mean = tau_population[i],
                      sd = 1),
        )
      return(df)
    }
  ) %>% 
  dplyr::bind_rows()

tau <- 
  outcome_potential %>% 
  dplyr::group_by(g) %>% 
  dplyr::summarise(
    tau = mean(
      y_1 - y_0
    )
  ) %>% 
  dplyr::ungroup()

outcome_potential %>% 
  head() %>% 
  kableExtra::kbl() %>% 
  kableExtra::kable_styling()
```

```{r}
outcome_potential %>% 
  modelsummary::datasummary_skim()
```

```{r}
tau %>% 
  kableExtra::kbl() %>% 
  kableExtra::kable_styling()
```

平均処置効果を正しく推定するため、反逆者が存在しないデータも生成。

```{r}
outcome_potential_nodefier <- 
  outcome_potential %>% 
  dplyr::filter(g != "df")
```

処置割当ベクトルと遵守タイプにもとづき、処置受取ベクトルdを生成する（観察されるデータの生成）。

```{r}
data_realized <- 
  generate_data_noncompliance_twoside(
    outcome_potential = outcome_potential,
    N_1 = N_1,
    seed = 1
  )

data_realized %>% 
  head() %>% 
  kableExtra::kbl() %>% 
  kableExtra::kable_styling()
```

```{r}
data_realized %>% 
  modelsummary::datasummary_skim()
```

```{r}
data_realized_nodefier <- 
  generate_data_noncompliance_twoside(
    outcome_potential = outcome_potential_nodefier,
    N_1 = N_1,
    seed = 1
  )

data_realized_nodefier %>% 
  head() %>% 
  kableExtra::kbl() %>% 
  kableExtra::kable_styling()
```

```{r}
data_realized_nodefier %>% 
  modelsummary::datasummary_skim()
```

## 分析と推計

### $\tilde{\tau}_D$の手動計算

観察されたデータに基づき、処置受取の処置割当効果の推定値$\tilde{/tau}_D$を算出。

```{r}
tau_tilde_d <- 
  data_realized %>% 
  dplyr::summarise(
    d = sum(d * z) / sum(z) -
      sum(d * (1 - z) / sum(1 - z))
  ) %>% 
  dplyr::pull(d)

tau_tilde_d
```

defierが存在する場合、$\tilde{\tau}_D$の値はcomplierのシェア(=0.25)と大きく異なり、この場合は約半分となっている。

```{r}
tau_tilde_d_nodefier <- 
  data_realized_nodefier %>% 
  dplyr::summarise(
    d = sum(d * z) / sum(z) -
      sum(d * (1 - z)) / sum(1 - z)
  ) %>% 
  dplyr::pull(d)

tau_tilde_d_nodefier
```

defierが存在しない場合、$\tilde{\tau}_D$の値はcomplierのシェア(`r round(0.25 / 0.75, 3)`)に近い値となる。

### 回帰分析による$\tilde{\tau}_D$の算出

```{r}
data_realized %>% 
  lm(formula = d ~ z,
     data = .) %>% 
  modelsummary::modelsummary(fmt = 6)
```

```{r}
data_realized_nodefier %>% 
  lm(formula = d ~ z,
     data = .) %>% 
  modelsummary::modelsummary(fmt = 6)
```

### $\tilde{\tau}_Y$の手動計算

観察されたデータにもとづき、結果の処置割当効果$\tilde{\tau}_Y$の推定値を算出。

```{r}
tau_tilde_y <- 
  data_realized %>% 
  dplyr::summarise(
    y = sum(y * z) / sum(z) -
      sum(y * (1 - z)) / sum(1 - z)
  ) %>% 
  dplyr::pull(y)

tau_tilde_y
```

```{r}
tau_tilde_y_nodefier <- 
  data_realized_nodefier %>% 
  dplyr::summarise(
    y = sum(y * z) / sum(z) -
      sum(y * (1 - z)) / sum(1 - z)
  ) %>% 
  dplyr::pull(y)

tau_tilde_y_nodefier
```

### 回帰分析による$\tilde{\tau}_Y$の推定

```{r}
data_realized %>% 
  lm(formula = y ~ z,
     data = .) %>% 
  modelsummary::modelsummary(fmt = 6)
```

```{r}
data_realized_nodefier %>% 
  lm(formula = y ~ z,
     data = .) %>% 
  modelsummary::modelsummary(fmt = 6)
```

### $\tilde{\tau}_{Y,co} = \tau_{late}$の手動計算

結果の処置割当効果を処置受取の処置割当効果で割り、局所平均処置効果の推定値$を算出。
```{r}
tau_late <- 
  tau_tilde_y /
  tau_tilde_d

tau_late
```
defierの存在する場合、$\tilde{\tau}\_{Y,co}\$の推定値はcomplierの平均処置効果(=2)と大きく異なる値となる。

```{r}
tau_late_nodefier <- 
  tau_tilde_y_nodefier /
  tau_tilde_d_nodefier

tau_late_nodefier
```

defierの存在しない場合、$\tilde{\tau}_{Y,co}$の推定値はcomplierの平均処置効果(=2)に近い値となる。

### 二段階最小二乗法による$\tilde{\tau}_{Y,co} = \tau_{late}$の推定

```{r}
data_realized %>% 
  estimatr::iv_robust(
    formula = y ~ d | z,
    data = .
  ) %>% 
  modelsummary::modelsummary(fmt = 6)
```

```{r}
data_realized_nodefier %>% 
  estimatr::iv_robust(
    formula = y ~ d | z,
    data = .
  ) %>% 
  modelsummary::modelsummary(fmt = 6)
```
